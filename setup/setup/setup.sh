#!/bin/bash
set -e

echo "üî• ‡πÄ‡∏£‡∏¥‡πà‡∏° Setup ‡∏£‡∏∞‡∏ö‡∏ö Kimono Minimal..."

### 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö
sudo apt update && sudo apt upgrade -y

### 2. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á XFCE Desktop + TigerVNC
sudo apt install -y xfce4 xfce4-goodies tigervnc-standalone-server dbus-x11 x11-xserver-utils xinit xinput

### 3. ‡∏õ‡∏¥‡∏î LightDM (‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ)
sudo systemctl disable lightdm || true
sudo systemctl stop lightdm || true
sudo apt remove -y lightdm || true

### 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .xinitrc ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö startx
echo "exec startxfce4" > ~/.xinitrc
chmod +x ~/.xinitrc

### 5. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
sudo apt install -y git curl htop net-tools neofetch xfce4-terminal ntfs-3gunzip bash-completion

### 6. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python + pyenv
sudo apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev \
libreadline-dev libsqlite3-dev wget llvm libncursesw5-dev xz-utils \
tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev python3-pip

curl https://pyenv.run | bash

echo '
# >>> pyenv config >>>
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
# <<< pyenv config <<<
' >> ~/.bashrc

source ~/.bashrc

pyenv install 3.10.9
pyenv install 3.13.0
pyenv global 3.13.0

### 7. setup NFS
echo "üóÇÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° mount entries ‡πÑ‡∏õ‡∏¢‡∏±‡∏á /etc/fstab..."

# === ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ) ===
sudo mkdir -p /mnt/DS220J/NFS/{Backup,Downloads,Media,Musics,Surveillance}
sudo mkdir -p /mnt/ext_hdd_1

# === ‡πÄ‡∏û‡∏¥‡πà‡∏° fstab entries ===
FSTAB_FILE="/etc/fstab"

NFS_ENTRIES=$(cat <<EOF

# === NFS Mounts ===
192.168.1.30:/volume1/Backup        /mnt/DS220J/NFS/Backup        nfs  rw,soft,intr,x-systemd.automount,_netdev  0  0
192.168.1.30:/volume1/DOWNLOADS     /mnt/DS220J/NFS/Downloads     nfs  rw,soft,intr,x-systemd.automount,_netdev  0  0
192.168.1.30:/volume1/Media         /mnt/DS220J/NFS/Media         nfs  rw,soft,intr,x-systemd.automount,_netdev  0  0
192.168.1.30:/volume1/music         /mnt/DS220J/NFS/Musics        nfs  rw,soft,intr,x-systemd.automount,_netdev  0  0
192.168.1.30:/volume1/surveillance  /mnt/DS220J/NFS/Surveillance  nfs  rw,soft,intr,x-systemd.automount,_netdev  0  0
EOF
)

NTFS_ENTRY=$(cat <<EOF

# === External NTFS Drive ===
UUID=B4EE4EEFEE4EAA06  /mnt/ext_hdd_1  ntfs-3g  uid=jellyfin,gid=jellyfin,umask=0022,defaults  0  0
EOF
)

# === ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ===
if ! grep -q "192.168.1.30:/volume1/Backup" "$FSTAB_FILE"; then
    echo "$NFS_ENTRIES" | sudo tee -a "$FSTAB_FILE" > /dev/null
    echo "$NTFS_ENTRY" | sudo tee -a "$FSTAB_FILE" > /dev/null
    echo "‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° fstab entries ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
else
    echo "‚ÑπÔ∏è  fstab ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß, ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°"
fi

### ‡πÄ‡∏û‡∏¥‡πà‡∏° PATH ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scripts ‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢ (1 ‡∏ä‡∏±‡πâ‡∏ô) ‡πÉ‡∏ô ~/.bashrc
echo "üõ†Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PATH ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scripts folder..."

read -r -d '' ADD_PATH_CODE <<'EOF'

# --- BEGIN Kimono scripts PATH ---
export PATH="$HOME/scripts:$PATH"
for dir in "$HOME/scripts"/*/ ; do
  if [ -d "$dir" ]; then
    export PATH="$dir:$PATH"
  fi
done
# --- END Kimono scripts PATH ---

EOF

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
if ! grep -q "BEGIN Kimono scripts PATH" ~/.bashrc; then
  echo "$ADD_PATH_CODE" >> ~/.bashrc
  echo "‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° PATH ‡πÉ‡∏ô ~/.bashrc ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
else
  echo "‚ÑπÔ∏è PATH ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scripts ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô ~/.bashrc"
fi

# (‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏Ç‡∏≠‡∏á setup ... )

echo "üîÑ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î systemd daemon..."
sudo systemctl daemon-reexec
sudo mount -a
echo "‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î shell ‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô 'source ~/.bashrc' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô PATH ‡πÉ‡∏´‡∏°‡πà"

### 8. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Home Assistant
mkdir -p ~/homeassistant
cd ~/homeassistant
pyenv shell 3.13.0
python -m venv venv_HASS
source venv_HASS/bin/activate
pip install --upgrade pip
pip install homeassistant

### 9. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Jellyfin Media Server
echo "üé• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Jellyfin Media Server..."

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
sudo apt install -y apt-transport-https gnupg2 curl

# ‡πÄ‡∏û‡∏¥‡πà‡∏° GPG key ‡∏Ç‡∏≠‡∏á Jellyfin
curl -fsSL https://repo.jellyfin.org/ubuntu/jellyfin_team.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/jellyfin.gpg > /dev/null

# ‡πÄ‡∏û‡∏¥‡πà‡∏° repository ‡∏Ç‡∏≠‡∏á Jellyfin (Ubuntu 24.04)
echo "deb [signed-by=/etc/apt/keyrings/jellyfin.gpg arch=$(dpkg --print-architecture)] https://repo.jellyfin.org/ubuntu $(lsb_release -cs) main" | \
  sudo tee /etc/apt/sources.list.d/jellyfin.list > /dev/null

# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à
sudo apt update

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Jellyfin
sudo apt install -y jellyfin

echo "‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Jellyfin ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!"
echo "üì∫ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà: http://localhost:8096 ‡∏´‡∏£‡∏∑‡∏≠ http://<ip-address>:8096"


### 10. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á VSCode (minimal)
wget -qO - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
sudo apt update
sudo apt install -y code
rm -f packages.microsoft.gpg

### 11. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏ó‡∏¢ Pattachote + toggle ‡∏†‡∏≤‡∏©‡∏≤
echo 'setxkbmap -layout us,th -variant ,pat -option grp:win_space_toggle' >> ~/.xprofile
chmod +x ~/.xprofile

### 12. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ VNC startup XFCE
mkdir -p ~/.vnc
cat << 'EOF' > ~/.vnc/xstartup
#!/bin/sh
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
exec startxfce4
EOF

chmod +x ~/.vnc/xstartup

### 13. ‡∏™‡∏±‡πà‡∏á‡∏£‡∏±‡∏ô VNC ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™
vncserver -kill :1 >/dev/null 2>&1 || true
vncserver :1
vncserver -kill :1

### 14. ‡∏ï‡∏±‡πâ‡∏á auto-start VNC ‡∏ï‡∏≠‡∏ô‡∏ö‡∏π‡∏ï
(crontab -l 2>/dev/null; echo "@reboot /usr/bin/vncserver -localhost no :1") | crontab -


echo "‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! Reboot ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° VNC ‡∏ó‡∏µ‡πà :1 ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢"
